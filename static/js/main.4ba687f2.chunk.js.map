{"version":3,"sources":["image.ts","rose.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["floatImage2imageData","img","data","Uint8ClampedArray","length","i","ImageData","width","height","convert","func","Array","visWeight","lch","max","Math","visHue","hsluv","hsluvToRgb","visWeightedHue","lchToRgb","roseData","numPetal","areas","fill","petalNum","round","area","Canvas","props","canvasRef","useRef","useEffect","canvas","current","context","getContext","putImageData","ref","HueRosePlot","hsluvColors","from","_","csvColors","rgb","r","g","b","heights","a","sqrt","datasets","v","backgroundColor","borderColor","borderWidth","labels","Chart","type","options","layout","padding","left","right","top","bottom","legend","display","scale","maintainAspectRatio","App","useState","process","file","setFile","ready","setReady","Image","src","onload","e","imageData2floatImage","floor","cvs","document","createElement","ctx","drawImage","getImageData","imageData","rgbToLch","rgbToHsluv","className","fluid","File","custom","label","onChange","target","files","URL","createObjectURL","Caption","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4ba687f2.chunk.js","sourcesContent":["import {ColorTuple} from \"hsluv\";\n\nexport interface FloatImage {\n    data: Array<ColorTuple>,\n    height: number,\n    width: number,\n}\n\nexport const imageData2floatImage = (img: ImageData): FloatImage => {\n    let data = new Array<ColorTuple>(img.data.length / 4);\n    for (let i = 0; i < data.length; i++) {\n        data[i] = [\n            img.data[4 * i + 0] / 255,\n            img.data[4 * i + 1] / 255,\n            img.data[4 * i + 2] / 255,\n        ];\n    }\n    return {\n        data: data,\n        width: img.width,\n        height: img.height,\n    };\n}\nexport const floatImage2imageData = (img: FloatImage): ImageData => {\n    let data = new Uint8ClampedArray(img.data.length * 4);\n    for (let i = 0; i < img.data.length; i++) {\n        data[4 * i + 0] = 255 * img.data[i][0];\n        data[4 * i + 1] = 255 * img.data[i][1];\n        data[4 * i + 2] = 255 * img.data[i][2];\n        data[4 * i + 3] = 255;\n    }\n    return new ImageData(\n        data,\n        img.width,\n        img.height,\n    );\n}\n\n\nexport const convert = (img: FloatImage, func: (tuple: ColorTuple) => ColorTuple): FloatImage => {\n    let data = new Array<ColorTuple>(img.data.length);\n    for (let i = 0; i < data.length; i++) {\n        data[i] = func(img.data[i]);\n    }\n    return {\n        ...img,\n        data: data,\n    }\n}\n\n","import {ColorTuple, hsluvToRgb, lchToRgb} from \"hsluv\";\nimport {convert, FloatImage} from \"./image\";\n\nexport const visWeight = (lch: FloatImage): FloatImage => {\n    let data = new Array<ColorTuple>(lch.data.length);\n    let max = 0;\n    for (let i = 0; i < data.length; i++) {\n        max = Math.max(max, lch.data[i][1])\n    }\n\n    for (let i = 0; i < data.length; i++) {\n        data[i] = [\n            lch.data[i][1] / max,\n            lch.data[i][1] / max,\n            lch.data[i][1] / max,\n        ]\n    }\n    return {...lch, data: data}\n}\nexport const visHue = (hsluv: FloatImage): FloatImage => {\n    let data = new Array<ColorTuple>(hsluv.data.length);\n    for (let i = 0; i < data.length; i++) {\n        data[i] = [\n            hsluv.data[i][0],\n            100,\n            50,\n        ];\n    }\n    return convert({...hsluv, data: data}, hsluvToRgb);\n}\nexport const visWeightedHue = (lch: FloatImage): FloatImage => {\n    let data = new Array<ColorTuple>(lch.data.length);\n    let max = 0;\n    for (let i = 0; i < data.length; i++) {\n        max = Math.max(max, lch.data[i][1])\n    }\n    for (let i = 0; i < data.length; i++) {\n        data[i] = [\n            65,\n            lch.data[i][1],\n            lch.data[i][2],\n        ];\n    }\n    return convert({...lch, data: data}, lchToRgb);\n}\nexport const roseData = (lch: FloatImage, numPetal: number): Array<number> => {\n    let areas = new Array<number>(numPetal).fill(0);\n    for (let i = 0; i < lch.data.length; i++) {\n        const petalNum = Math.round(lch.data[i][2]/360 * (numPetal - 1));\n        // const petalNum = Math.round(hsluv.data[i][0] / 360 * (numPetal - 1));\n        const area = lch.data[i][1];\n        areas[petalNum] += area;\n    }\n    return areas;\n}","import React, {useEffect, useRef, useState} from 'react';\nimport './App.scss';\nimport Chart from 'chart.js';\n\nimport * as bs from \"react-bootstrap\";\nimport {convert, floatImage2imageData, imageData2floatImage} from \"./image\";\nimport {ColorTuple, hsluvToRgb, rgbToHsluv, rgbToLch} from \"hsluv\";\nimport {roseData, visHue, visWeight, visWeightedHue} from \"./rose\";\n\nconst fallbackURL = process.env.PUBLIC_URL + '/mm5a7753.jpg';\n\nconst Canvas = (props: { img: ImageData }) => {\n    const img = props.img;\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    useEffect(() => {\n        const canvas = canvasRef.current!;\n        const context = canvas.getContext('2d')!;\n        canvas.width = img.width;\n        canvas.height = img.height;\n        context.putImageData(img, 0, 0);\n    })\n    return <canvas ref={canvasRef}/>\n}\n\nconst imageData = (img: HTMLImageElement) => {\n    const scale = Math.max(1, img.width * img.height / 5e5);\n    const width = Math.floor(img.width / scale);\n    const height = Math.floor(img.height / scale);\n\n    let cvs = document.createElement('canvas');\n    let ctx = cvs.getContext('2d')!;\n    cvs.width = width;\n    cvs.height = height;\n    ctx.drawImage(img, 0, 0, cvs.width, cvs.height);\n    return ctx.getImageData(0, 0, cvs.width, cvs.height);\n}\n\nconst HueRosePlot = (props: { areas: Array<number>, height: number }) => {\n    const numPetal = props.areas.length;\n    const hsluvColors: Array<ColorTuple> = Array.from({length: numPetal}, (_, i) => [360 * i / numPetal, 100, 65]);\n    const csvColors = Array.from(hsluvColors, (hsluv, _) => {\n        const rgb = hsluvToRgb(hsluv);\n        const r = Math.round(rgb[0] * 255);\n        const g = Math.round(rgb[1] * 255);\n        const b = Math.round(rgb[2] * 255);\n        return `rgba(${r}, ${g}, ${b}, 1)`;\n    });\n    const heights = Array.from(props.areas, (a, _) => Math.sqrt(a));\n    const data = {\n        datasets: [{\n            data: Array.from(heights, (v, _) => Math.round(1000 * v) / 1000),\n            backgroundColor: csvColors,\n            borderColor: csvColors,\n            borderWidth: 1,\n\n        }],\n        labels: Array.from({length: numPetal}, (_, i) => Math.round(i / numPetal * 360)),\n    };\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    useEffect(() => {\n        const canvas = canvasRef.current!;\n        const context = canvas.getContext('2d')!;\n        new Chart(\n            context,\n            {\n                data: data,\n                type: 'polarArea',\n                options: {\n                    layout: {\n                        padding: {\n                            left: 0,\n                            right: 0,\n                            top: 0,\n                            bottom: 0\n                        }\n                    },\n                    legend: {\n                        display: false,\n                    },\n                    scale: {\n                        display: false,\n                    },\n                    maintainAspectRatio: false\n                },\n\n            }\n        );\n    })\n    return <canvas ref={canvasRef}/>\n}\n\nfunction App() {\n    const [file, setFile] = useState(fallbackURL);\n    const [ready, setReady] = useState(false);\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files[0]) {\n            setReady(false);\n            setFile(URL.createObjectURL(e.target.files[0]));\n        }\n    };\n    const handleLoad = (e: Event) => {\n        setReady(true);\n    };\n\n    let img = new Image();\n    img.src = file;\n    img.onload = handleLoad;\n\n    const rgb = ready ? imageData2floatImage(imageData(img)) : null;\n    const lch = rgb ? convert(rgb, rgbToLch) : null;\n    const hsluv = rgb ? convert(rgb, rgbToHsluv) : null;\n\n    return (\n        <div className=\"App\">\n            <bs.Container>\n                <bs.Row className=\"primary\">\n                    <bs.Col>\n                        <bs.Image src={file} fluid={true}/>\n                    </bs.Col>\n                    <bs.Col>\n                        {(lch) ? <HueRosePlot areas={roseData(lch, 20)} height={img.height}/> : null}\n                    </bs.Col>\n                </bs.Row>\n                <bs.Row className=\"align-items-center\">\n                    <bs.Col>\n                        <bs.Form.File\n                            custom={true}\n                            label=\"Analyze another image\"\n                            onChange={handleChange}\n                        />\n                    </bs.Col>\n                </bs.Row>\n                <bs.Row className={\"secondary\"}>\n                    <bs.Col>\n                        <bs.Figure>\n                            {lch ? <Canvas img={floatImage2imageData(visWeight(lch))}/> : null}\n                            <bs.Figure.Caption>\n                                The <b>chroma</b> is used to give more weight to some pixels than others\n                            </bs.Figure.Caption>\n                        </bs.Figure>\n                    </bs.Col>\n                    <bs.Col>\n                        <bs.Figure>\n                            {hsluv ? <Canvas img={floatImage2imageData(visHue(hsluv))}/> : null}\n                            <bs.Figure.Caption>\n                                The <b>hue</b> is not always obvious from the image.\n                            </bs.Figure.Caption>\n                        </bs.Figure>\n                    </bs.Col>\n                    <bs.Col>\n                        <bs.Figure>\n                            {(lch) ? <Canvas img={floatImage2imageData(visWeightedHue(lch))}/> : null}\n                            <bs.Figure.Caption>\n                                What the algorithm <em>\"sees\"</em>.\n                            </bs.Figure.Caption>\n                        </bs.Figure>\n                    </bs.Col>\n                </bs.Row>\n            </bs.Container>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}