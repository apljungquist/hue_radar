{"version":3,"sources":["worker.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Worker_fn","Worker","Canvas","props","img","canvasRef","useRef","useEffect","canvas","current","context","getContext","width","height","putImageData","ref","HueRoseChart","obj","React","createRef","areas","this","Array","from","length","_","i","numPetal","hsluvColors","csvColors","hsluv","rgb","hsluvToRgb","r","Math","round","g","b","heights","a","sqrt","datasets","data","v","backgroundColor","borderColor","borderWidth","labels","console","log","update","Chart","type","options","animation","duration","legend","display","scale","maintainAspectRatio","responsive","Component","App","useState","process","file","setFile","w","setW","h","setH","c","setC","p","setP","src","Promise","resolve","reject","Image","onload","e","imageFromSource","then","worker","Comlink","processImage","max","floor","cvs","document","createElement","ctx","drawImage","getImageData","imageData","className","fluid","File","custom","label","onChange","target","files","URL","createObjectURL","Caption","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d4ec5bba.chunk.js","sourcesContent":["export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/worker.0c31f24e.worker.js\");\n}\n","/* eslint-disable import/no-webpack-loader-syntax */\nimport React, {useEffect, useRef, useState} from 'react';\nimport './App.scss';\nimport Chart from 'chart.js';\nimport * as bs from \"react-bootstrap\";\nimport {ColorTuple, hsluvToRgb} from \"hsluv\";\nimport Worker from 'worker-loader!./worker';\nimport {WorkerApi} from './worker';\nimport * as Comlink from 'comlink';\n\nconst fallbackURL = process.env.PUBLIC_URL + '/mm5a7753.jpg';\n\nconst Canvas = (props: { img: ImageData }) => {\n    const img = props.img;\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    useEffect(() => {\n        const canvas = canvasRef.current!;\n        const context = canvas.getContext('2d')!;\n        canvas.width = img.width;\n        canvas.height = img.height;\n        context.putImageData(img, 0, 0);\n    })\n    return <canvas ref={canvasRef}/>\n}\n\nconst imageData = (img: HTMLImageElement) => {\n    const scale = Math.max(1, img.width * img.height / 5e5);\n    const width = Math.floor(img.width / scale);\n    const height = Math.floor(img.height / scale);\n\n    let cvs = document.createElement('canvas');\n    let ctx = cvs.getContext('2d')!;\n    cvs.width = width;\n    cvs.height = height;\n    ctx.drawImage(img, 0, 0, cvs.width, cvs.height);\n    return ctx.getImageData(0, 0, cvs.width, cvs.height);\n}\n\ninterface RoseProps {\n    areas: Array<number> | number,\n}\n\nclass HueRoseChart extends React.Component<RoseProps, {}> {\n    private ref: React.RefObject<HTMLCanvasElement>;\n    private obj: Chart | null;\n\n    constructor(props: RoseProps) {\n        super(props);\n        this.ref = React.createRef();\n        this.obj = null;\n    }\n\n    data() {\n        const areas = this.props.areas instanceof Array ? this.props.areas : Array.from({length: 12}, (_, i) => i + 1);\n        const numPetal = areas.length;\n        const hsluvColors: Array<ColorTuple> = Array.from({length: numPetal}, (_, i) => [360 * i / numPetal, 100, 65]);\n        const csvColors = Array.from(hsluvColors, (hsluv, _) => {\n            const rgb = hsluvToRgb(hsluv);\n            const r = Math.round(rgb[0] * 255);\n            const g = Math.round(rgb[1] * 255);\n            const b = Math.round(rgb[2] * 255);\n            return `rgba(${r}, ${g}, ${b}, 1)`;\n        });\n        const heights = Array.from(areas, (a, _) => Math.sqrt(a));\n        return {\n            datasets: [{\n                data: Array.from(heights, (v, _) => Math.round(1000 * v) / 1000),\n                backgroundColor: csvColors,\n                borderColor: csvColors,\n                borderWidth: 1,\n\n            }],\n            labels: Array.from({length: numPetal}, (_, i) => Math.round(i / numPetal * 360)),\n        };\n    }\n\n    componentDidUpdate() {\n        console.log(\"update\");\n        if (this.obj) {\n            this.obj.data = this.data();\n            this.obj.update();\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"mount\");\n        this.obj = new Chart(this.ref.current!, {\n                data: this.data(),\n                type: 'polarArea',\n                options: {\n                    animation: {\n                        duration: 0\n                    },\n                    legend: {\n                        display: false,\n                    },\n                    scale: {\n                        display: false,\n                    },\n                    maintainAspectRatio: true,\n                    responsive: true,\n                },\n\n            }\n        );\n    }\n\n    render() {\n        console.log(\"render\");\n        return <canvas ref={this.ref}/>;\n    }\n}\n\nconst imageFromSource = (src: string): Promise<HTMLImageElement> => {\n    return new Promise((resolve, reject) => {\n        let img = new Image();\n        img.src = src;\n        img.onload = (e: Event) => {\n            resolve(img)\n        }\n    });\n}\n\nfunction App() {\n    const numPetal = 20;\n    const [file, setFile] = useState(fallbackURL);\n    const [w, setW] = useState<ImageData | null>(null);\n    const [h, setH] = useState<ImageData | null>(null);\n    const [c, setC] = useState<ImageData | null>(null);\n    const [p, setP] = useState<Array<number> | number>(numPetal);\n\n    useEffect(() => {\n        imageFromSource(file).then((img) => {\n            const worker = new Worker();\n            const obj = Comlink.wrap<WorkerApi>(worker);\n            obj.processImage(\n                // transfer not working because ImageData.data.buffer is resolved to ArrayBufferLike\n                imageData(img),\n                numPetal,\n                Comlink.proxy(setW),\n                Comlink.proxy(setH),\n                Comlink.proxy(setC),\n                Comlink.proxy(setP),\n            );\n        })\n    }, [file])\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files[0]) {\n            // TODO: Cancel worker?\n            setFile(URL.createObjectURL(e.target.files[0]));\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <bs.Container>\n                <bs.Row className=\"primary\">\n                    <bs.Col>\n                        <bs.Image src={file} fluid={true}/>\n                        {/*{img ? <Canvas img={img}/> : null}*/}\n                    </bs.Col>\n                    <bs.Col>\n                        <HueRoseChart areas={p}/>\n                    </bs.Col>\n                </bs.Row>\n                <bs.Row className=\"align-items-center\">\n                    <bs.Col>\n                        <bs.Form.File\n                            custom={true}\n                            label=\"Analyze another image\"\n                            onChange={handleChange}\n                        />\n                    </bs.Col>\n                </bs.Row>\n                <bs.Row className={\"secondary\"}>\n                    <bs.Col>\n                        <bs.Figure>\n                            {w ? <Canvas img={w}/> : null}\n                            <bs.Figure.Caption>\n                                The <b>chroma</b> is used to give more weight to some pixels than others\n                            </bs.Figure.Caption>\n                        </bs.Figure>\n                    </bs.Col>\n                    <bs.Col>\n                        <bs.Figure>\n                            {h ? <Canvas img={h}/> : null}\n                            <bs.Figure.Caption>\n                                The <b>hue</b> is not always obvious from the image.\n                            </bs.Figure.Caption>\n                        </bs.Figure>\n                    </bs.Col>\n                    <bs.Col>\n                        <bs.Figure>\n                            {c ? <Canvas img={c}/> : null}\n                            <bs.Figure.Caption>\n                                What the algorithm <em>\"sees\"</em>.\n                            </bs.Figure.Caption>\n                        </bs.Figure>\n                    </bs.Col>\n                </bs.Row>\n            </bs.Container>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}