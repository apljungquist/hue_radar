{"version":3,"sources":["color.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["floatImage2imageData","img","data","Uint8ClampedArray","length","i","ImageData","width","height","convert","func","Array","visWeight","max","Math","visHue","hsluvToRgb","visWeightedHue","hsluv","lch","roseData","numPetal","areas","fill","petalNum","round","area","fallbackURL","process","Canvas","props","canvasRef","useRef","useEffect","canvas","current","context","getContext","createImageBitmap","then","bmp","transferFromImageBitmap","ref","HueRosePlot","hsluvColors","from","_","csvColors","rgb","r","g","b","hexColors","hsluvToHex","heights","a","sqrt","totalHeight","reduce","datasets","v","backgroundColor","borderColor","borderWidth","labels","Chart","type","options","layout","padding","left","right","top","bottom","legend","display","scale","maintainAspectRatio","App","useState","file","setFile","ready","setReady","Image","src","onload","e","imageData2floatImage","cvs","document","createElement","ctx","drawImage","getImageData","imageData","rgbToLch","rgbToHsluv","className","fluid","File","custom","label","onChange","target","files","URL","createObjectURL","Caption","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.70a087eb.chunk.js","sourcesContent":["import {ColorTuple, hsluvToRgb, lchToRgb} from \"hsluv\";\n\ninterface FloatImage {\n    data: Array<ColorTuple>,\n    height: number,\n    width: number,\n}\n\nexport const imageData2floatImage = (img: ImageData): FloatImage => {\n    let data = new Array<ColorTuple>(img.data.length / 4);\n    for (let i = 0; i < data.length; i++) {\n        data[i] = [\n            img.data[4 * i + 0] / 255,\n            img.data[4 * i + 1] / 255,\n            img.data[4 * i + 2] / 255,\n        ];\n    }\n    return {\n        data: data,\n        width: img.width,\n        height: img.height,\n    };\n}\nexport const floatImage2imageData = (img: FloatImage): ImageData => {\n    let data = new Uint8ClampedArray(img.data.length * 4);\n    for (let i = 0; i < img.data.length; i++) {\n        data[4 * i + 0] = 255 * img.data[i][0];\n        data[4 * i + 1] = 255 * img.data[i][1];\n        data[4 * i + 2] = 255 * img.data[i][2];\n        data[4 * i + 3] = 255;\n    }\n    return new ImageData(\n        data,\n        img.width,\n        img.height,\n    );\n}\n\n\nexport const convert = (img: FloatImage, func: (tuple:ColorTuple) => ColorTuple): FloatImage => {\n    let data = new Array<ColorTuple>(img.data.length);\n    for (let i = 0; i < data.length; i++) {\n        data[i] = func(img.data[i]);\n    }\n    return {\n        ...img,\n        data: data,\n    }\n}\n\nexport const lch2rgb = (img: FloatImage): FloatImage => {\n    return convert(img, lchToRgb)\n}\n\nexport const visWeight = (img: FloatImage): FloatImage => {\n    const ch = 1;\n    let data = new Array<ColorTuple>(img.data.length);\n    let max = 0;\n    for (let i = 0; i < data.length; i++) {\n        max = Math.max(max, img.data[i][ch])\n    }\n\n    for (let i = 0; i < data.length; i++) {\n        data[i] = [\n            img.data[i][ch] / max,\n            img.data[i][ch] / max,\n            img.data[i][ch] / max,\n        ]\n    }\n    return {...img, data: data}\n}\n\nexport const visHue = (img: FloatImage): FloatImage => {\n    let data = new Array<ColorTuple>(img.data.length);\n    for (let i = 0; i < data.length; i++) {\n        data[i] = [\n          img.data[i][0],\n          100,\n          50,\n        ];\n    }\n    return convert({...img, data: data}, hsluvToRgb);\n}\n\nexport const visWeightedHue = (hsluv: FloatImage, lch: FloatImage): FloatImage => {\n    let data = new Array<ColorTuple>(hsluv.data.length);\n    let max = 0;\n    for (let i = 0; i < data.length; i++) {\n        max = Math.max(max, lch.data[i][1])\n    }\n    for (let i = 0; i < data.length; i++) {\n        data[i] = [\n            hsluv.data[i][0],\n            100,\n            100 * lch.data[i][1] / max,\n        ];\n    }\n    return convert({...hsluv, data: data}, hsluvToRgb);\n}\n\nexport const roseData = (hsluv: FloatImage, lch:FloatImage, numPetal: number) : Array<number> => {\n    let areas = new Array<number>(numPetal).fill(0);\n    for (let i = 0; i < hsluv.data.length; i++) {\n        const petalNum = Math.round(hsluv.data[i][0] / 360 * (numPetal-1));\n        const area = lch.data[i][1];\n        areas[petalNum] += area;\n    }\n    return areas;\n}","import React, {useEffect, useRef, useState} from 'react';\nimport './App.scss';\nimport Chart from 'chart.js';\n\nimport * as bs from \"react-bootstrap\";\nimport {\n    convert,\n    floatImage2imageData,\n    imageData2floatImage,\n    roseData,\n    visHue,\n    visWeight,\n    visWeightedHue\n} from \"./color\";\nimport {ColorTuple, hsluvToHex, hsluvToRgb, rgbToHsluv, rgbToLch} from \"hsluv\";\n\nconst fallbackURL = process.env.PUBLIC_URL + '/mm5a7753.jpg';\n\nconst Canvas = (props: { img: ImageData }) => {\n    const img = props.img;\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    useEffect(() => {\n        const canvas = canvasRef.current!;\n        canvas.width = img.width;\n        canvas.height = img.height;\n        const context = canvas.getContext('bitmaprenderer')!;\n        createImageBitmap(img, 0, 0, img.width, img.height).then((bmp) => {\n            context.transferFromImageBitmap(bmp)\n        });\n\n    })\n    return <canvas ref={canvasRef}/>\n}\n\nconst imageData = (img: HTMLImageElement) => {\n    let cvs = document.createElement('canvas');\n    cvs.width = img.width;\n    cvs.height = img.height;\n    let ctx = cvs.getContext('2d')!;\n    ctx.drawImage(img, 0, 0, cvs.width, cvs.height);\n    return ctx.getImageData(0, 0, cvs.width, cvs.height);\n}\n\nconst HueRosePlot = (props: { areas: Array<number>, height: number }) => {\n    const numPetal = props.areas.length;\n\n    const hsluvColors: Array<ColorTuple> = Array.from({length: numPetal}, (_, i) => [360 * i / numPetal, 100, 50]);\n    const csvColors = Array.from(hsluvColors, (hsluv, _) => {\n        const rgb = hsluvToRgb(hsluv);\n        const r = Math.round(rgb[0] * 255);\n        const g = Math.round(rgb[1] * 255);\n        const b = Math.round(rgb[2] * 255);\n        return `rgba(${r}, ${g}, ${b}, 1)`;\n    });\n    const hexColors = Array.from(hsluvColors, (hsluv, _) => hsluvToHex(hsluv));\n    const heights = Array.from(props.areas, (a, _) => Math.sqrt(a));\n    const totalHeight = heights.reduce((a, b) => a + b, 0);\n    const data = {\n        datasets: [{\n            data: Array.from(heights, (v, _) => Math.round(100 * v / totalHeight)),\n            backgroundColor: csvColors,\n            borderColor: csvColors,\n            borderWidth: 1,\n\n        }],\n        labels: hexColors,\n    };\n    const canvasRef = useRef<HTMLCanvasElement>(null);\n    useEffect(() => {\n        const canvas = canvasRef.current!;\n        const context = canvas.getContext('2d')!;\n        new Chart(\n            context,\n            {\n                data: data,\n                type: 'polarArea',\n                options: {\n                    layout: {\n                        padding: {\n                            left: 0,\n                            right: 0,\n                            top: 0,\n                            bottom: 0\n                        }\n                    },\n                    legend: {\n                        display: false,\n                    },\n                    scale: {\n                        display: false,\n                    },\n                    maintainAspectRatio:false\n                },\n\n            }\n        );\n    })\n    return <canvas ref={canvasRef}/>\n}\n\nfunction App() {\n    const [file, setFile] = useState(fallbackURL);\n    const [ready, setReady] = useState(false);\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setReady(false);\n        if (e.target.files !== null) {\n            setFile(URL.createObjectURL(e.target.files[0]));\n        } else {\n            setFile(fallbackURL);\n        }\n    };\n    const handleLoad = (e: Event) => {\n        setReady(true);\n    };\n\n    let img = new Image();\n    img.src = file;\n    img.onload = handleLoad;\n\n\n    const rgb = ready ? imageData2floatImage(imageData(img)) : null;\n    const lch = rgb ? convert(rgb, rgbToLch) : null;\n    const hsluv = rgb ? convert(rgb, rgbToHsluv) : null;\n\n    return (\n        <div className=\"App\">\n            <bs.Container>\n                <bs.Row className=\"primary\">\n                    <bs.Col>\n                        <bs.Image src={file} fluid={true}/>\n                    </bs.Col>\n                    <bs.Col>\n                        {(hsluv && lch) ? <HueRosePlot areas={roseData(hsluv, lch, 20)} height={img.height}/> : null}\n                    </bs.Col>\n                </bs.Row>\n                <bs.Row className=\"align-items-center\">\n                    <bs.Col>\n                        <bs.Form.File\n                            custom={true}\n                            label=\"Analyze another image\"\n                            onChange={handleChange}\n                        />\n                    </bs.Col>\n                </bs.Row>\n                <bs.Row className={\"secondary\"}>\n                    <bs.Col>\n                        <bs.Figure>\n                            {lch ? <Canvas img={floatImage2imageData(visWeight(lch))}/> : null}\n                            <bs.Figure.Caption>The <b>chroma</b> is used to give more weight to some pixels than others\n                            </bs.Figure.Caption>\n                        </bs.Figure>\n                    </bs.Col>\n                    <bs.Col>\n                        <bs.Figure>\n                            {hsluv ? <Canvas img={floatImage2imageData(visHue(hsluv))}/> : null}\n                            <bs.Figure.Caption>\n                                The <b>hue</b> is not always obvious from the image.\n                            </bs.Figure.Caption>\n                        </bs.Figure>\n                    </bs.Col>\n                    <bs.Col>\n                        <bs.Figure>\n                            {(hsluv && lch) ?\n                                <Canvas img={floatImage2imageData(visWeightedHue(hsluv, lch))}/> : null}\n                            <bs.Figure.Caption>\n                                What the algorithm <em>\"sees\"</em>.\n                            </bs.Figure.Caption>\n                        </bs.Figure>\n                    </bs.Col>\n                </bs.Row>\n            </bs.Container>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}